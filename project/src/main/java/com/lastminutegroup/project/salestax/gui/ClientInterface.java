/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.lastminutegroup.project.salestax.gui;

import com.lastminutegroup.project.salestax.engine.EvaluateProduct;
import com.lastminutegroup.project.salestax.entity.Product;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.ListSelectionModel;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.poifs.filesystem.POIFSFileSystem;

/**
 *
 * @author Francesco Lucci
 */
public class ClientInterface extends javax.swing.JFrame {

    /**
     * Creates new form ClientInterface
     */
    public ClientInterface() throws FileNotFoundException, IOException {

        initComponents();

        int rows;
        db = new ArrayList<>();
        SelectedProduct = new ListOfProduct();
        Basket = new ListOfProduct();
        FileInputStream in = new FileInputStream("./src/DB/Database.xls");
        POIFSFileSystem fs = new POIFSFileSystem(in);
        HSSFWorkbook wb = new HSSFWorkbook(fs);
        HSSFSheet sheet = wb.getSheetAt(0);
        rows = sheet.getPhysicalNumberOfRows();

        for (int i = 1; i < rows; i++) {
            db.add(EvaluateProduct.evaluateProduct((int) sheet.getRow(i).getCell(0).getNumericCellValue(),
                    sheet.getRow(i).getCell(1).getStringCellValue(),
                    Double.parseDouble(sheet.getRow(i).getCell(2).getStringCellValue()),
                    sheet.getRow(i).getCell(3).getStringCellValue(),
                    sheet.getRow(i).getCell(4).getStringCellValue(),
                    sheet.getRow(i).getCell(5).getStringCellValue()));
        }

        for (int i = 0; i < rows - 1; i++) {
            this.SelectedProduct.addToProducts(db.get(i).getProduct_ID() + "-" + db.get(i).getName() + " at " + db.get(i).getPrice());
            this.SelectedProduct.addToProductIDs(String.valueOf(db.get(i).getProduct_ID()));
        }

        ListSelectedProduct = new JList(makeStrings(this.SelectedProduct.getProducts()));
        ListSelectedProduct.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        ListSelectedProduct.setSelectedIndex(0);
        jScrollPaneShowProduct.setViewportView(ListSelectedProduct);
        jButtonRemove.setVisible(false);
        jButtonReset.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane4 = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextPaneTotal = new javax.swing.JTextPane();
        jButtonAdd = new javax.swing.JButton();
        jButtonRemove = new javax.swing.JButton();
        jButtonBuy = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        jScrollPaneShowBasket = new javax.swing.JScrollPane();
        jScrollPaneShowProduct = new javax.swing.JScrollPane();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextAreaShowDetails = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jButtonAddAll = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextPaneTotalTax = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Basket");

        jLabel3.setText("Select Product");

        jLabel4.setText("Total:");

        jScrollPane3.setViewportView(jTextPaneTotal);

        jButtonAdd.setText("Add");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonRemove.setText("Remove");
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        jButtonBuy.setText("Buy");
        jButtonBuy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuyActionPerformed(evt);
            }
        });

        jButtonReset.setText("Reset");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jTextAreaShowDetails.setColumns(20);
        jTextAreaShowDetails.setRows(5);
        jScrollPane5.setViewportView(jTextAreaShowDetails);

        jLabel5.setText("Total Tax:");

        jLabel6.setText("Details");

        jButtonAddAll.setText("Add all");
        jButtonAddAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddAllActionPerformed(evt);
            }
        });

        jScrollPane7.setViewportView(jTextPaneTotalTax);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(112, 112, 112))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButtonBuy)
                                .addGap(33, 33, 33))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonAdd)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonAddAll))
                            .addComponent(jScrollPaneShowProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonRemove)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPaneShowBasket, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40))))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPaneShowBasket, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jScrollPaneShowProduct))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonAdd)
                        .addComponent(jButtonAddAll))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButtonRemove)
                        .addComponent(jButtonReset)))
                .addGap(18, 18, 18)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addComponent(jButtonBuy)))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        // TODO add your handling code here:
        if (ListBasket.getSelectedValue() != null) {

            Basket.remove(ListBasket.getSelectedIndex());

            if (Basket.size() == 0) {
                jScrollPaneShowBasket.setViewportView(null);
                jButtonRemove.setVisible(false);
                jButtonReset.setVisible(false);
            } else {
                ListBasket = new JList(makeStrings(Basket.getProducts()));
                jScrollPaneShowBasket.setViewportView(ListBasket);
            }

        }
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void jButtonBuyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuyActionPerformed
        // TODO add your handling code here:
        jTextAreaShowDetails.setText(null);
        jTextPaneTotal.setText(null);
        jTextPaneTotalTax.setText(null);

        double totalTax = 0;
        double total = 0;
        order = new ArrayList<>();

        for (int i = 0; i < Basket.size(); i++) {
            order.add(getProductfromDB(Basket.getProductIDs().get(i)));
        }

        for (int i = 0; i < order.size(); i++) {
            jTextAreaShowDetails.append(order.get(i).getName() + ": " + (float) (order.get(i).getPrice() + order.get(i).calculateTax()));
            jTextAreaShowDetails.append("\n");
            total += (order.get(i).getPrice() + order.get(i).calculateTax());
            totalTax += order.get(i).calculateTax();
        }

        jTextPaneTotal.setText(String.valueOf((float) total));
        jTextPaneTotalTax.setText(String.valueOf((float) totalTax));
    }//GEN-LAST:event_jButtonBuyActionPerformed


    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        // TODO add your handling code here:
        Basket.addToProducts(ListSelectedProduct.getSelectedValue());
        Basket.addToProductIDs(ListSelectedProduct.getSelectedValue().substring(0, ListSelectedProduct.getSelectedValue().indexOf("-")));
        ListBasket = new JList(makeStrings(Basket.getProducts()));
        jScrollPaneShowBasket.setViewportView(ListBasket);
        ListBasket.setSelectedIndex(Basket.size() - 1);
        jButtonRemove.setVisible(true);
        jButtonReset.setVisible(true);
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        // TODO add your handling code here: 
        ListBasket.removeAll();
        Basket.clear();
        jTextAreaShowDetails.setText(null);
        jTextPaneTotal.setText(null);
        jTextPaneTotalTax.setText(null);
        jScrollPaneShowBasket.setViewportView(null);
        jButtonRemove.setVisible(false);
        jButtonReset.setVisible(false);
    }//GEN-LAST:event_jButtonResetActionPerformed

    private void jButtonAddAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddAllActionPerformed
        // TODO add your handling code here:
        Basket.addAll(SelectedProduct);
        ListBasket = new JList(makeStrings(Basket.getProducts()));
        jScrollPaneShowBasket.setViewportView(ListBasket);
        jButtonRemove.setVisible(true);
        jButtonReset.setVisible(true);
    }//GEN-LAST:event_jButtonAddAllActionPerformed

    public Product getProductfromDB(String ProductID) {

        for (int i = 0; i < db.size(); i++) {
            if (String.valueOf(db.get(i).getProduct_ID()).equals(ProductID)) {
                return db.get(i);
            }
        }
        return null;
    }

    public double CalcolateTotal() {
        double total = 0;
        for (int i = 0; i < order.size(); i++) {
            total = total + order.get(i).getPrice();
        }
        return total;
    }

    private String[] makeStrings(ArrayList<String> Array) {
        String[] string = new String[Array.size()];
        for (int i = 0; i < string.length; i++) {
            string[i] = Array.get(i);
        }
        return string;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientInterface.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new ClientInterface().setVisible(true);

                } catch (IOException ex) {
                    Logger.getLogger(ClientInterface.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonAddAll;
    private javax.swing.JButton jButtonBuy;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPaneShowBasket;
    private javax.swing.JScrollPane jScrollPaneShowProduct;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextArea jTextAreaShowDetails;
    private javax.swing.JTextPane jTextPaneTotal;
    private javax.swing.JTextPane jTextPaneTotalTax;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JList<String> ListSelectedProduct;
    private javax.swing.JList<String> ListBasket;
    private ListOfProduct SelectedProduct;
    private ListOfProduct Basket;
    private ArrayList<Product> db;
    private ArrayList<Product> order;

}
